{
  "address": "0x7A05DFa42C5CeBA3D57784E4560f4e03FCC138E0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultChefAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wantAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_debtTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_earnedAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_earnedToUsdcPath",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_earnedToBbankPath",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_earnedToWantPath",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_controllerFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rewardRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_buyBackRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawFeeFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_slippageFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_uniRouterAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_referralCode",
          "type": "uint16"
        }
      ],
      "name": "SetSettings",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BORROW_DEPTH_MAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BORROW_RATE_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BORROW_RATE_MAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BORROW_RATE_MAX_HARD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "aTokenArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aTokenTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aaveClaimAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aaveDataAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aaveDepositAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bbankAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowDepth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyBackAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyBackRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "debtTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "debtTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleverageOnce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earnedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "earnedToBbankPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "earnedToUsdcPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "earnedToWantPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeMaxTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastEarnBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minLeverage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_borrowRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_borrowDepth",
          "type": "uint256"
        }
      ],
      "name": "rebalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referralCode",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetAllowances",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_govAddress",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_controllerFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_buyBackRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawFeeFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_slippageFactor",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_uniRouterAddress",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_referralCode",
          "type": "uint16"
        }
      ],
      "name": "setSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sharesTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippageFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippageFactorUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyBalMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyBalTargeted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultChefAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wantAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wantLockedInHere",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wantLockedTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFeeFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFeeFactorLL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFeeFactorMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wmaticAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x15d4ff2b8dedbed4b015641de325c41acfd58b3e5c6e737c023a88331b3da8a3",
  "receipt": {
    "to": null,
    "from": "0xD81bdF78b3bC96EE1838fE4ee820145F8101BbE9",
    "contractAddress": "0x7A05DFa42C5CeBA3D57784E4560f4e03FCC138E0",
    "transactionIndex": 1,
    "gasUsed": "3176790",
    "logsBloom": "0x00000000000000020000000000000240000000000000000000800000000000000000000000000000000000000100000000008100000008000000000000220000000000000000000000000800000000800001200000000000000101002000000000000000020080000100000000000800000000000000000080400000000000c00000010000000040000000000000000000000000000000000000000000000000220000000000000020000000000000000001080000000200000000000000004001000000004000400801000000000000000000000020000004100000000020000010000000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0x709e8ecd887d139e105ef0668f0dce9f9509b61dfb78da7e6d9fab0931b06032",
    "transactionHash": "0x15d4ff2b8dedbed4b015641de325c41acfd58b3e5c6e737c023a88331b3da8a3",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 24864811,
        "transactionHash": "0x15d4ff2b8dedbed4b015641de325c41acfd58b3e5c6e737c023a88331b3da8a3",
        "address": "0x7A05DFa42C5CeBA3D57784E4560f4e03FCC138E0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d81bdf78b3bc96ee1838fe4ee820145f8101bbe9"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0x709e8ecd887d139e105ef0668f0dce9f9509b61dfb78da7e6d9fab0931b06032"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 24864811,
        "transactionHash": "0x15d4ff2b8dedbed4b015641de325c41acfd58b3e5c6e737c023a88331b3da8a3",
        "address": "0x7A05DFa42C5CeBA3D57784E4560f4e03FCC138E0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000d81bdf78b3bc96ee1838fe4ee820145f8101bbe9",
          "0x000000000000000000000000d168373274dac9fda397843d917557a24e2c2507"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0x709e8ecd887d139e105ef0668f0dce9f9509b61dfb78da7e6d9fab0931b06032"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 24864811,
        "transactionHash": "0x15d4ff2b8dedbed4b015641de325c41acfd58b3e5c6e737c023a88331b3da8a3",
        "address": "0xd393b1E02dA9831Ff419e22eA105aAe4c47E1253",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000007a05dfa42c5ceba3d57784e4560f4e03fcc138e0",
          "0x0000000000000000000000009198f13b08e299d85e096929fa9781a1e3d5d827"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 6,
        "blockHash": "0x709e8ecd887d139e105ef0668f0dce9f9509b61dfb78da7e6d9fab0931b06032"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 24864811,
        "transactionHash": "0x15d4ff2b8dedbed4b015641de325c41acfd58b3e5c6e737c023a88331b3da8a3",
        "address": "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000007a05dfa42c5ceba3d57784e4560f4e03fcc138e0",
          "0x000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ff"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 7,
        "blockHash": "0x709e8ecd887d139e105ef0668f0dce9f9509b61dfb78da7e6d9fab0931b06032"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 24864811,
        "transactionHash": "0x15d4ff2b8dedbed4b015641de325c41acfd58b3e5c6e737c023a88331b3da8a3",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000d81bdf78b3bc96ee1838fe4ee820145f8101bbe9",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000005a4a307a4b15500000000000000000000000000000000000000000000000006ccf5fa7aa7fc4000000000000000000000000000000000000000000000005c9275b1af9b6492aa60000000000000000000000000000000000000000000000006c7515773034aeb00000000000000000000000000000000000000000000005c927b5652a30943ff6",
        "logIndex": 8,
        "blockHash": "0x709e8ecd887d139e105ef0668f0dce9f9509b61dfb78da7e6d9fab0931b06032"
      }
    ],
    "blockNumber": 24864811,
    "cumulativeGasUsed": "3414342",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD168373274DAc9fDa397843D917557A24e2c2507",
    "0xd393b1e02da9831ff419e22ea105aae4c47e1253",
    "0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e",
    "0x6d29322ba6549b95e98e9b08033f5ffb857f19c5",
    "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",
    [
      "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",
      "0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747"
    ],
    [
      "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",
      "0x63F7B7D85F9B02aD94c93A138a5b7508937b5942"
    ],
    [
      "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",
      "0xd393b1e02da9831ff419e22ea105aae4c47e1253"
    ]
  ],
  "numDeployments": 2,
  "solcInputHash": "ce0d667e02ce174b93dc3fe5af987458",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultChefAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wantAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_debtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_earnedAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_earnedToUsdcPath\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_earnedToBbankPath\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_earnedToWantPath\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_controllerFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyBackRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawFeeFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_slippageFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_uniRouterAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_referralCode\",\"type\":\"uint16\"}],\"name\":\"SetSettings\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BORROW_DEPTH_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BORROW_RATE_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BORROW_RATE_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BORROW_RATE_MAX_HARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"aTokenArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aTokenTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aaveClaimAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aaveDataAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aaveDepositAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bbankAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debtTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debtTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleverageOnce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earnedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earnedToBbankPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earnedToUsdcPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earnedToWantPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeMaxTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEarnBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLeverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_borrowDepth\",\"type\":\"uint256\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralCode\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetAllowances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_govAddress\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_controllerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buyBackRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawFeeFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slippageFactor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_uniRouterAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_referralCode\",\"type\":\"uint16\"}],\"name\":\"setSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharesTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippageFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippageFactorUL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyBalMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyBalTargeted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultChefAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantLockedInHere\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantLockedTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeeFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeeFactorLL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeeFactorMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wmaticAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"borrowRate\":{\"details\":\"Variables that can be changed to config profitability and risk: {borrowRate}          - At What % of our collateral do we borrow per leverage level. {borrowDepth}         - How many levels of leverage do we take. {BORROW_RATE_MAX}     - A limit on how much we can push borrow risk. {BORROW_DEPTH_MAX}    - A limit on how many steps we can leverage.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/StrategyAave.sol\":\"StrategyAave\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IAaveStake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IAaveStake {\\r\\n    function depositETH(address lendingPool, address onBehalfOf, uint16 referralCode) external payable;\\r\\n    \\r\\n    function withdrawETH(address lendingPool, uint256 amount, address onBehalfOf) external;\\r\\n\\r\\n    function repayETH(address lendingPool, uint256 amount, uint256 rateMode, address onBehalfOf) external payable;\\r\\n\\r\\n    function borrowETH(address lendingPool, uint256 amount, uint256 interesRateMode, uint16 referralCode) external;\\r\\n    \\r\\n    function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external payable;\\r\\n    \\r\\n    function withdraw(address asset, uint256 amount, address to) external;\\r\\n\\r\\n    function borrow(address asset, uint256 amount, uint256 interesRateMode, uint16 referralCode, address onBehalfOf) external;\\r\\n\\r\\n    function repay(address asset, uint256 amount, uint256 rateMode, address onBehalfOf) external payable;\\r\\n    \\r\\n    function getUserAccountData(address user) external view returns (uint256, uint256, uint256, uint256, uint256, uint256);\\r\\n    \\r\\n    \\r\\n    function claimRewards(address[] calldata assets, uint256 amount, address to) external returns (uint256);\\r\\n}\",\"keccak256\":\"0x068c0cefe66f58c044c6c941da298828fe6141d8de53bac30a5a940aa038902f\",\"license\":\"MIT\"},\"contracts/interfaces/IProtocolDataProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\r\\npragma solidity ^0.8.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\ninterface IProtocolDataProvider {\\r\\n  struct TokenData {\\r\\n    string symbol;\\r\\n    address tokenAddress;\\r\\n  }\\r\\n\\r\\n  function getAllReservesTokens() external view returns (TokenData[] memory);\\r\\n  function getAllATokens() external view returns (TokenData[] memory);\\r\\n  function getReserveConfigurationData(address asset) external view returns (uint256 decimals, uint256 ltv, uint256 liquidationThreshold, uint256 liquidationBonus, uint256 reserveFactor, bool usageAsCollateralEnabled, bool borrowingEnabled, bool stableBorrowRateEnabled, bool isActive, bool isFrozen);\\r\\n  function getReserveData(address asset) external view returns (uint256 availableLiquidity, uint256 totalStableDebt, uint256 totalVariableDebt, uint256 liquidityRate, uint256 variableBorrowRate, uint256 stableBorrowRate, uint256 averageStableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex, uint40 lastUpdateTimestamp);\\r\\n  function getUserReserveData(address asset, address user) external view returns (uint256 currentATokenBalance, uint256 currentStableDebt, uint256 currentVariableDebt, uint256 principalStableDebt, uint256 scaledVariableDebt, uint256 stableBorrowRate, uint256 liquidityRate, uint40 stableRateLastUpdated, bool usageAsCollateralEnabled);\\r\\n  function getReserveTokensAddresses(address asset) external view returns (address aTokenAddress, address stableDebtTokenAddress, address variableDebtTokenAddress);\\r\\n}\",\"keccak256\":\"0x6c312c26372eaaa756649d1974b25c9eb8d0f391ada4a1a2f0fdf6d7a609ddcc\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IUniPair.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IUniPair {\\r\\n    function token0() external view returns (address);\\r\\n\\r\\n    function token1() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x63a0202463b0cdcf35c9e3245ad4d000f2d8dc5b1962d534172b1acfb9166785\",\"license\":\"MIT\"},\"contracts/interfaces/IUniRouter01.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IUniRouter01 {\\r\\n    function factory() external pure returns (address);\\r\\n\\r\\n    function WAVAX() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 amountADesired,\\r\\n        uint256 amountBDesired,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    )\\r\\n        external\\r\\n        returns (\\r\\n            uint256 amountA,\\r\\n            uint256 amountB,\\r\\n            uint256 liquidity\\r\\n        );\\r\\n\\r\\n    function addLiquidityAVAX(\\r\\n        address token,\\r\\n        uint256 amountTokenDesired,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountAVAXMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    )\\r\\n        external\\r\\n        payable\\r\\n        returns (\\r\\n            uint256 amountToken,\\r\\n            uint256 amountAVAX,\\r\\n            uint256 liquidity\\r\\n        );\\r\\n\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountA, uint256 amountB);\\r\\n\\r\\n    function removeLiquidityAVAX(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountAVAXMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountToken, uint256 amountAVAX);\\r\\n\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountA, uint256 amountB);\\r\\n\\r\\n    function removeLiquidityAVAXWithPermit(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountAVAXMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountToken, uint256 amountAVAX);\\r\\n\\r\\n    function swapExactTokensForTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapTokensForExactTokens(\\r\\n        uint256 amountOut,\\r\\n        uint256 amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapExactAVAXForTokens(\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapTokensForExactAVAX(\\r\\n        uint256 amountOut,\\r\\n        uint256 amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapExactTokensForAVAX(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapAVAXForExactTokens(\\r\\n        uint256 amountOut,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable returns (uint256[] memory amounts);\\r\\n\\r\\n    function quote(\\r\\n        uint256 amountA,\\r\\n        uint256 reserveA,\\r\\n        uint256 reserveB\\r\\n    ) external pure returns (uint256 amountB);\\r\\n\\r\\n    function getAmountOut(\\r\\n        uint256 amountIn,\\r\\n        uint256 reserveIn,\\r\\n        uint256 reserveOut\\r\\n    ) external pure returns (uint256 amountOut);\\r\\n\\r\\n    function getAmountIn(\\r\\n        uint256 amountOut,\\r\\n        uint256 reserveIn,\\r\\n        uint256 reserveOut\\r\\n    ) external pure returns (uint256 amountIn);\\r\\n\\r\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\r\\n\\r\\n    function getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\\r\\n}\\r\\n\",\"keccak256\":\"0xea1ef3448bfe7656b0ea6bf544eade958c733f06356f82417be7b634a10754b3\",\"license\":\"MIT\"},\"contracts/interfaces/IUniRouter02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./IUniRouter01.sol\\\";\\r\\n\\r\\ninterface IUniRouter02 is IUniRouter01 {\\r\\n    function removeLiquidityAVAXSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountAVAXMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountAVAX);\\r\\n\\r\\n    function removeLiquidityAVAXWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountAVAXMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountAVAX);\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external;\\r\\n\\r\\n    function swapExactAVAXForTokensSupportingFeeOnTransferTokens(\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable;\\r\\n\\r\\n    function swapExactTokensForAVAXSupportingFeeOnTransferTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xdfebfad987b867e2d203a1f276ebc27a14cc863b1358ec43498be817843cf1b5\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IWETH {\\r\\n    function deposit() external payable;\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function withdraw(uint) external;\\r\\n}\",\"keccak256\":\"0x59683eac981f6f969e7cddb4383334f34c6ec54bf5aa4b10343d689d2ca99dec\",\"license\":\"MIT\"},\"contracts/vault/StrategyAave.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\nimport \\\"../interfaces/IAaveStake.sol\\\";\\r\\nimport \\\"../interfaces/IProtocolDataProvider.sol\\\";\\r\\nimport \\\"../interfaces/IUniPair.sol\\\";\\r\\nimport \\\"../interfaces/IUniRouter02.sol\\\";\\r\\nimport \\\"../interfaces/IWETH.sol\\\";\\r\\n\\r\\ncontract StrategyAave is Ownable, ReentrancyGuard, Pausable {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    address public constant aaveDataAddress    = 0xFA3bD19110d986c5e5E9DD5F69362d05035D045B; // Mumbai testnet // 0x7551b5D2763519d4e37e8B81929D336De671d46d; // Polygon\\r\\n    address public constant aaveDepositAddress = 0x9198F13B08E299d85E096929fA9781A1E3d5d827; // Mumbai testnet // 0x8dFf5E27EA6b7AC08EbFdf9eB090F32ee9a30fcf; // Polygon\\r\\n    address public constant aaveClaimAddress   = 0xd41aE58e803Edf4304334acCE4DC4Ec34a63C644; // Mumbai testnet // 0x357D51124f59836DeD84c8a1730D72B749d8BC23; // Polygon\\r\\n\\r\\n    address public wantAddress;\\r\\n    address public aTokenAddress;\\r\\n    address public debtTokenAddress;\\r\\n    address public earnedAddress;\\r\\n    uint16 public referralCode = 0;\\r\\n\\r\\n    address public uniRouterAddress       = 0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff; // Polygon/Mumbai testnet\\r\\n    address public constant wmaticAddress = 0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889; // Mumbai testnet // 0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270; // Polygon\\r\\n    address public constant usdcAddress   = 0xe6b8a5CF854791412c1f6EFC7CAf629f5Df1c747; // Mumbai testnet // 0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174; // Polygon\\r\\n    address public constant bbankAddress  = 0x63F7B7D85F9B02aD94c93A138a5b7508937b5942; // Mumbai testnet\\r\\n    address public constant vaultAddress  = 0xD81bdF78b3bC96EE1838fE4ee820145F8101BbE9;\\r\\n    address public constant feeAddress    = 0x2B8406c07613490cF56b978b8D531fd7EB066582;\\r\\n    \\r\\n    address public vaultChefAddress;\\r\\n    address public govAddress;\\r\\n\\r\\n    uint256 public lastEarnBlock = block.number;\\r\\n    uint256 public sharesTotal   = 0;\\r\\n\\r\\n    address public constant buyBackAddress = 0x000000000000000000000000000000000000dEaD;\\r\\n    uint256 public controllerFee = 50;\\r\\n    uint256 public rewardRate = 0;\\r\\n    uint256 public buyBackRate = 450;\\r\\n    uint256 public constant feeMaxTotal = 1000;\\r\\n    uint256 public constant feeMax = 10000; // 100 = 1%\\r\\n\\r\\n    uint256 public withdrawFeeFactor = 10000; // 0% withdraw fee\\r\\n    uint256 public constant withdrawFeeFactorMax = 10000;\\r\\n    uint256 public constant withdrawFeeFactorLL = 9900;\\r\\n\\r\\n    uint256 public slippageFactor = 950; // 5% default slippage tolerance\\r\\n    uint256 public constant slippageFactorUL = 995;\\r\\n    \\r\\n    /**\\r\\n     * @dev Variables that can be changed to config profitability and risk:\\r\\n     * {borrowRate}          - At What % of our collateral do we borrow per leverage level.\\r\\n     * {borrowDepth}         - How many levels of leverage do we take.\\r\\n     * {BORROW_RATE_MAX}     - A limit on how much we can push borrow risk.\\r\\n     * {BORROW_DEPTH_MAX}    - A limit on how many steps we can leverage.\\r\\n     */\\r\\n    uint256 public borrowRate;\\r\\n    uint256 public borrowDepth = 6;\\r\\n    uint256 public minLeverage;\\r\\n    uint256 public BORROW_RATE_MAX;\\r\\n    uint256 public BORROW_RATE_MAX_HARD;\\r\\n    uint256 public BORROW_DEPTH_MAX = 8;\\r\\n    uint256 public constant BORROW_RATE_DIVISOR = 10000;\\r\\n\\r\\n    address[] public aTokenArray;\\r\\n    address[] public earnedToUsdcPath;\\r\\n    address[] public earnedToBbankPath;\\r\\n    address[] public earnedToWantPath;\\r\\n\\r\\n    event SetSettings(\\r\\n        uint256 _controllerFee,\\r\\n        uint256 _rewardRate,\\r\\n        uint256 _buyBackRate,\\r\\n        uint256 _withdrawFeeFactor,\\r\\n        uint256 _slippageFactor,\\r\\n        address _uniRouterAddress,\\r\\n        uint16 _referralCode\\r\\n    );\\r\\n\\r\\n    modifier onlyGov() {\\r\\n        require(msg.sender == govAddress, \\\"!gov\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(\\r\\n        address _vaultChefAddress,\\r\\n        address _wantAddress,\\r\\n        address _aTokenAddress,\\r\\n        address _debtTokenAddress,\\r\\n        address _earnedAddress,\\r\\n        address[] memory _earnedToUsdcPath,\\r\\n        address[] memory _earnedToBbankPath,\\r\\n        address[] memory _earnedToWantPath\\r\\n    ) {\\r\\n        govAddress = msg.sender;\\r\\n        vaultChefAddress = _vaultChefAddress;\\r\\n\\r\\n        wantAddress = _wantAddress;\\r\\n        aTokenAddress = _aTokenAddress;\\r\\n        aTokenArray = [aTokenAddress];\\r\\n        debtTokenAddress = _debtTokenAddress;\\r\\n\\r\\n        earnedAddress = _earnedAddress;\\r\\n\\r\\n        earnedToUsdcPath = _earnedToUsdcPath;\\r\\n        earnedToBbankPath = _earnedToBbankPath;\\r\\n        earnedToWantPath = _earnedToWantPath;\\r\\n        \\r\\n        (, uint256 ltv, uint256 threshold, , , bool collateral, bool borrow, , , ) = \\r\\n            IProtocolDataProvider(aaveDataAddress).getReserveConfigurationData(wantAddress);\\r\\n        BORROW_RATE_MAX = ltv * 99 / 100; // 1%\\r\\n        BORROW_RATE_MAX_HARD = ltv * 999 / 1000; // 0.1%\\r\\n        // At minimum, borrow rate always 10% lower than liquidation threshold\\r\\n        if (threshold * 9 / 10 > BORROW_RATE_MAX) {\\r\\n            borrowRate = BORROW_RATE_MAX;\\r\\n        } else {\\r\\n            borrowRate = threshold * 9 / 10;\\r\\n        }\\r\\n        // Only leverage if you can\\r\\n        if (!(collateral && borrow)) {\\r\\n            borrowDepth = 0;\\r\\n            BORROW_DEPTH_MAX = 0;\\r\\n        }\\r\\n\\r\\n        transferOwnership(_vaultChefAddress);\\r\\n\\r\\n        _resetAllowances();\\r\\n    }\\r\\n\\r\\n    function deposit(uint256 _wantAmt) external onlyOwner nonReentrant whenNotPaused returns (uint256) {\\r\\n        // Call must happen before transfer\\r\\n        uint256 wantLockedBefore = wantLockedTotal();\\r\\n\\r\\n        IERC20(wantAddress).safeTransferFrom(\\r\\n            address(msg.sender),\\r\\n            address(this),\\r\\n            _wantAmt\\r\\n        );\\r\\n\\r\\n        // Proper deposit amount for tokens with fees, or vaults with deposit fees\\r\\n        uint256 sharesAdded = _farm(_wantAmt);\\r\\n        if (sharesTotal > 0 && wantLockedBefore > 0) {\\r\\n            sharesAdded = sharesAdded * sharesTotal / wantLockedBefore;\\r\\n        }\\r\\n        sharesTotal = sharesTotal + sharesAdded;\\r\\n\\r\\n        return sharesAdded;\\r\\n    }\\r\\n\\r\\n    function _farm(uint256 _wantAmt) internal returns (uint256) {\\r\\n        uint256 wantAmt = wantLockedInHere();\\r\\n        if (wantAmt == 0) return 0;\\r\\n\\r\\n        // Cheat method to check for deposit fees in Aave\\r\\n        uint256 sharesBefore = wantLockedTotal() - _wantAmt;\\r\\n        _leverage(wantAmt);\\r\\n\\r\\n        return wantLockedTotal() - sharesBefore;\\r\\n    }\\r\\n\\r\\n    function withdraw(uint256 _wantAmt) external onlyOwner nonReentrant returns (uint256) {\\r\\n        require(_wantAmt > 0, \\\"_wantAmt is 0\\\");\\r\\n\\r\\n        uint256 wantAmt = IERC20(wantAddress).balanceOf(address(this));\\r\\n        \\r\\n        if (_wantAmt > wantAmt) {\\r\\n            // Fully deleverage\\r\\n            _deleverage();\\r\\n            wantAmt = IERC20(wantAddress).balanceOf(address(this));\\r\\n        }\\r\\n\\r\\n        if (_wantAmt > wantAmt) {\\r\\n            _wantAmt = wantAmt;\\r\\n        }\\r\\n\\r\\n        if (_wantAmt > wantLockedTotal()) {\\r\\n            _wantAmt = wantLockedTotal();\\r\\n        }\\r\\n\\r\\n        uint256 sharesRemoved = _wantAmt * sharesTotal / wantLockedTotal();\\r\\n\\r\\n        if (sharesRemoved > sharesTotal) {\\r\\n            sharesRemoved = sharesTotal;\\r\\n        }\\r\\n        sharesTotal = sharesTotal - sharesRemoved;\\r\\n\\r\\n        // Withdraw fee\\r\\n        uint256 withdrawFee = _wantAmt * ( withdrawFeeFactorMax - withdrawFeeFactor ) / withdrawFeeFactorMax;\\r\\n        if (withdrawFee > 0) {\\r\\n            IERC20(wantAddress).safeTransfer(vaultAddress, withdrawFee);\\r\\n        }\\r\\n\\r\\n        _wantAmt = _wantAmt - withdrawFee;\\r\\n\\r\\n        IERC20(wantAddress).safeTransfer(vaultChefAddress, _wantAmt);\\r\\n\\r\\n        if (!paused()) {\\r\\n            // Put it all back in\\r\\n            _leverage(wantLockedInHere());\\r\\n        }\\r\\n\\r\\n        return sharesRemoved;\\r\\n    }\\r\\n\\r\\n    function _supply(uint256 _amount) internal {\\r\\n        IAaveStake(aaveDepositAddress).deposit(wantAddress, _amount, address(this), referralCode);\\r\\n    }\\r\\n\\r\\n    function _borrow(uint256 _amount) internal {\\r\\n        IAaveStake(aaveDepositAddress).borrow(wantAddress, _amount, 2, referralCode, address(this));\\r\\n    }\\r\\n\\r\\n    function _repayBorrow(uint256 _amount) internal {\\r\\n        IAaveStake(aaveDepositAddress).repay(wantAddress, _amount, 2, address(this));\\r\\n    }\\r\\n\\r\\n    function _removeSupply(uint256 _amount) internal {\\r\\n        IAaveStake(aaveDepositAddress).withdraw(wantAddress, _amount, address(this));\\r\\n    }\\r\\n\\r\\n    function _leverage(uint256 _amount) internal {\\r\\n        if (borrowDepth == 0) {\\r\\n            _supply(_amount);\\r\\n        } else if (_amount > minLeverage) {\\r\\n            for (uint256 i = 0; i < borrowDepth; i ++) {\\r\\n                _supply(_amount);\\r\\n                _amount = _amount * borrowRate / BORROW_RATE_DIVISOR;\\r\\n                _borrow(_amount);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _deleverage() internal {\\r\\n        uint256 wantBal = wantLockedInHere();\\r\\n\\r\\n        if (borrowDepth > 0) {\\r\\n            while (wantBal < debtTotal()) {\\r\\n                _repayBorrow(wantBal);\\r\\n                _removeSupply(aTokenTotal() - supplyBalMin());\\r\\n                wantBal = wantLockedInHere();\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function deleverageOnce() external onlyGov {\\r\\n        _deleverageOnce();\\r\\n    }\\r\\n\\r\\n    function _deleverageOnce() internal {\\r\\n        if (aTokenTotal() <= supplyBalTargeted()) {\\r\\n            _removeSupply(aTokenTotal() - supplyBalMin());\\r\\n        } else {\\r\\n            _removeSupply(aTokenTotal() - supplyBalTargeted());\\r\\n        }\\r\\n\\r\\n        _repayBorrow(wantLockedInHere());\\r\\n    }\\r\\n\\r\\n    function earn() external nonReentrant whenNotPaused onlyGov {\\r\\n        uint256 preEarn = IERC20(earnedAddress).balanceOf(address(this));\\r\\n\\r\\n        // Harvest farm tokens\\r\\n        IAaveStake(aaveClaimAddress).claimRewards(aTokenArray, type(uint256).max, address(this));\\r\\n\\r\\n        uint256 earnedAmt = IERC20(earnedAddress).balanceOf(address(this)) - preEarn;\\r\\n\\r\\n        if (earnedAmt > 0) {\\r\\n            earnedAmt = distributeFees(earnedAmt);\\r\\n            earnedAmt = buyBack(earnedAmt);\\r\\n\\r\\n            if (earnedAddress != wantAddress) {\\r\\n                _safeSwap(\\r\\n                    earnedAmt,\\r\\n                    earnedToWantPath,\\r\\n                    address(this)\\r\\n                );\\r\\n            }\\r\\n\\r\\n            lastEarnBlock = block.number;\\r\\n\\r\\n            _leverage(wantLockedInHere());\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function distributeFees(uint256 _earnedAmt) internal returns (uint256) {\\r\\n        if (controllerFee > 0) {\\r\\n            uint256 fee = _earnedAmt * controllerFee / feeMax;\\r\\n\\r\\n            IWETH(wmaticAddress).withdraw(fee);\\r\\n            safeTransferETH(feeAddress, fee);\\r\\n\\r\\n            _earnedAmt = _earnedAmt - fee;\\r\\n        }\\r\\n\\r\\n        return _earnedAmt;\\r\\n    }\\r\\n\\r\\n    function buyBack(uint256 _earnedAmt) internal returns (uint256) {\\r\\n        if (buyBackRate > 0) {\\r\\n            uint256 buyBackAmt = _earnedAmt * buyBackRate / feeMax;\\r\\n\\r\\n            _safeSwap(\\r\\n                buyBackAmt,\\r\\n                earnedToBbankPath,\\r\\n                buyBackAddress\\r\\n            );\\r\\n\\r\\n            _earnedAmt = _earnedAmt - buyBackAmt;\\r\\n        }\\r\\n\\r\\n        return _earnedAmt;\\r\\n    }\\r\\n\\r\\n    function pause() external onlyGov {\\r\\n        _pause();\\r\\n    }\\r\\n\\r\\n    function unpause() external onlyGov {\\r\\n        _unpause();\\r\\n        _resetAllowances();\\r\\n    }\\r\\n\\r\\n    function wantLockedInHere() public view returns (uint256) {\\r\\n        return IERC20(wantAddress).balanceOf(address(this));\\r\\n    }\\r\\n\\r\\n    function wantLockedTotal() public view returns (uint256) {\\r\\n        return wantLockedInHere() + aTokenTotal() - debtTotal();\\r\\n    }\\r\\n\\r\\n    function _resetAllowances() internal {\\r\\n        IERC20(wantAddress).safeApprove(aaveDepositAddress, type(uint256).max);\\r\\n        // IERC20(wantAddress).safeIncreaseAllowance(\\r\\n        //     aaveDepositAddress,\\r\\n        //     type(uint256).max\\r\\n        // );\\r\\n\\r\\n        IERC20(earnedAddress).safeApprove(uniRouterAddress, type(uint256).max);\\r\\n        // IERC20(earnedAddress).safeIncreaseAllowance(\\r\\n        //     uniRouterAddress,\\r\\n        //     type(uint256).max\\r\\n        // );\\r\\n    }\\r\\n\\r\\n    function resetAllowances() external onlyGov {\\r\\n        _resetAllowances();\\r\\n    }\\r\\n\\r\\n    function debtTotal() public view returns (uint256) {\\r\\n        return IERC20(debtTokenAddress).balanceOf(address(this));\\r\\n    }\\r\\n\\r\\n    function aTokenTotal() public view returns (uint256) {\\r\\n        return IERC20(aTokenAddress).balanceOf(address(this));\\r\\n    }\\r\\n\\r\\n    function supplyBalMin() public view returns (uint256) {\\r\\n        return debtTotal() * BORROW_RATE_DIVISOR / BORROW_RATE_MAX_HARD;\\r\\n    }\\r\\n\\r\\n    function supplyBalTargeted() public view returns (uint256) {\\r\\n        return debtTotal() * BORROW_RATE_DIVISOR / borrowRate;\\r\\n    }\\r\\n\\r\\n    function _safeSwap(\\r\\n        uint256 _amountIn,\\r\\n        address[] memory _path,\\r\\n        address _to\\r\\n    ) internal {\\r\\n        uint256[] memory amounts = IUniRouter02(uniRouterAddress).getAmountsOut(_amountIn, _path);\\r\\n        uint256 amountOut = amounts[amounts.length - 1];\\r\\n\\r\\n        IUniRouter02(uniRouterAddress).swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n            _amountIn, \\r\\n            amountOut * slippageFactor, \\r\\n            _path, \\r\\n            _to, \\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function safeTransferETH(address _to, uint256 _value) internal {\\r\\n        (bool success, ) = _to.call{value: _value}(new bytes(0));\\r\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function rebalance(uint256 _borrowRate, uint256 _borrowDepth) external onlyGov {\\r\\n        require(_borrowRate <= BORROW_RATE_MAX, \\\"!rate\\\");\\r\\n        require(_borrowRate != 0, \\\"borrowRate is used as a divisor\\\");\\r\\n        require(_borrowDepth <= BORROW_DEPTH_MAX, \\\"!depth\\\");\\r\\n\\r\\n        _deleverage();\\r\\n        borrowRate = _borrowRate;\\r\\n        borrowDepth = _borrowDepth;\\r\\n        _leverage(wantLockedInHere());\\r\\n    }\\r\\n\\r\\n    function setSettings(\\r\\n        uint256 _controllerFee,\\r\\n        uint256 _rewardRate,\\r\\n        uint256 _buyBackRate,\\r\\n        uint256 _withdrawFeeFactor,\\r\\n        uint256 _slippageFactor,\\r\\n        address _uniRouterAddress,\\r\\n        uint16 _referralCode\\r\\n    ) external onlyGov {\\r\\n        require(_controllerFee + _rewardRate + buyBackRate <= feeMaxTotal, \\\"Max fee of 100%\\\");\\r\\n        require(_withdrawFeeFactor >= withdrawFeeFactorLL, \\\"_withdrawFeeFactor too low\\\");\\r\\n        require(_withdrawFeeFactor <= withdrawFeeFactorMax, \\\"_withdrawFeeFactor too high\\\");\\r\\n        require(_slippageFactor <= slippageFactorUL, \\\"_slippageFactor too high\\\");\\r\\n\\r\\n        controllerFee = _controllerFee;\\r\\n        rewardRate = _rewardRate;\\r\\n        buyBackRate = _buyBackRate;\\r\\n        withdrawFeeFactor = _withdrawFeeFactor;\\r\\n        slippageFactor = _slippageFactor;\\r\\n        uniRouterAddress = _uniRouterAddress;\\r\\n        referralCode = _referralCode;\\r\\n\\r\\n        emit SetSettings(_controllerFee, _rewardRate, _buyBackRate, _withdrawFeeFactor, _slippageFactor, _uniRouterAddress, _referralCode);\\r\\n    }\\r\\n\\r\\n    function setGov(address _govAddress) external onlyGov {\\r\\n        govAddress = _govAddress;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\",\"keccak256\":\"0xd36839a06a8878896b52969fbf61df01cf6ea151ac87243a27a66f8e9ed25746\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526005805461ffff60a01b19169055600680546001600160a01b03191673a5e0829caced8ffdd4de3c43696c57f7d7a678ff178155436009556000600a8190556032600b55600c556101c2600d55612710600e556103b6600f5560115560086015553480156200007257600080fd5b50604051620038d8380380620038d88339810160408190526200009591620008a5565b620000a9620000a36200031d565b62000321565b60018080556002805460088054336001600160a01b0319918216179091556007805482166001600160a01b038e8116919091179091556001600160a81b03199092166101008c8416021790925560038054909216898216179182905560408051602081019091529116815262000123916016919062000751565b50600480546001600160a01b038088166001600160a01b031992831617909255600580549287169290911691909117905582516200016990601790602086019062000751565b5081516200017f90601890602085019062000751565b5080516200019590601990602084019062000751565b50600254604051633e15014160e01b815260009182918291829173fa3bd19110d986c5e5e9dd5f69362d05035d045b91633e15014191620001e89161010090046001600160a01b03169060040162000a86565b6101406040518083038186803b1580156200020257600080fd5b505afa15801562000217573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023d9190620009c7565b505050965096505050945094505060648460636200025c919062000cc2565b62000268919062000ca1565b6013556103e86200027c856103e762000cc2565b62000288919062000ca1565b601455601354600a6200029d85600962000cc2565b620002a9919062000ca1565b1115620002bc57601354601055620002db565b600a620002cb84600962000cc2565b620002d7919062000ca1565b6010555b818015620002e65750805b620002f657600060118190556015555b620003018c62000371565b6200030b620003f7565b50505050505050505050505062000d37565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200037b6200031d565b6001600160a01b03166200038e62000466565b6001600160a01b031614620003c05760405162461bcd60e51b8152600401620003b79062000b8e565b60405180910390fd5b6001600160a01b038116620003e95760405162461bcd60e51b8152600401620003b79062000b02565b620003f48162000321565b50565b600254620004379061010090046001600160a01b0316739198f13b08e299d85e096929fa9781a1e3d5d82760001962000475602090811b6200171817901c565b60065460055462000464916001600160a01b03918216911660001962000475602090811b6200171817901c565b565b6000546001600160a01b031690565b801580620005045750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90620004ae903090869060040162000a9a565b60206040518083038186803b158015620004c757600080fd5b505afa158015620004dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005029190620009ae565b155b620005235760405162461bcd60e51b8152600401620003b79062000c44565b6200057e8363095ea7b360e01b84846040516024016200054592919062000ab4565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b03938416179052906200058316565b505050565b6000620005df826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200061f60201b62001844179092919060201c565b8051909150156200057e578080602001905181019062000600919062000991565b6200057e5760405162461bcd60e51b8152600401620003b79062000bfa565b60606200063084846000856200063a565b90505b9392505050565b6060824710156200065f5760405162461bcd60e51b8152600401620003b79062000b48565b6200066a8562000709565b620006895760405162461bcd60e51b8152600401620003b79062000bc3565b600080866001600160a01b03168587604051620006a7919062000a68565b60006040518083038185875af1925050503d8060008114620006e6576040519150601f19603f3d011682016040523d82523d6000602084013e620006eb565b606091505b509092509050620006fe82828662000713565b979650505050505050565b803b15155b919050565b606083156200072457508162000633565b825115620007355782518084602001fd5b8160405162461bcd60e51b8152600401620003b7919062000acd565b828054828255906000526020600020908101928215620007a9579160200282015b82811115620007a957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000772565b50620007b7929150620007bb565b5090565b5b80821115620007b75760008155600101620007bc565b80516001600160a01b03811681146200070e57600080fd5b600082601f830112620007fb578081fd5b815160206001600160401b03808311156200081a576200081a62000d21565b818302604051838282010181811084821117156200083c576200083c62000d21565b604052848152838101925086840182880185018910156200085b578687fd5b8692505b8583101562000888576200087381620007d2565b8452928401926001929092019184016200085f565b50979650505050505050565b805180151581146200070e57600080fd5b600080600080600080600080610100898b031215620008c2578384fd5b620008cd89620007d2565b9750620008dd60208a01620007d2565b9650620008ed60408a01620007d2565b9550620008fd60608a01620007d2565b94506200090d60808a01620007d2565b60a08a01519094506001600160401b03808211156200092a578485fd5b620009388c838d01620007ea565b945060c08b01519150808211156200094e578384fd5b6200095c8c838d01620007ea565b935060e08b015191508082111562000972578283fd5b50620009818b828c01620007ea565b9150509295985092959890939650565b600060208284031215620009a3578081fd5b620006338262000894565b600060208284031215620009c0578081fd5b5051919050565b6000806000806000806000806000806101408b8d031215620009e7578182fd5b8a51995060208b0151985060408b0151975060608b0151965060808b0151955062000a1560a08c0162000894565b945062000a2560c08c0162000894565b935062000a3560e08c0162000894565b925062000a466101008c0162000894565b915062000a576101208c0162000894565b90509295989b9194979a5092959850565b6000825162000a7c81846020870162000cee565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b600060208252825180602084015262000aee81604085016020870162000cee565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606082015260800190565b60008262000cbd57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161562000ce957634e487b7160e01b81526011600452602481fd5b500290565b60005b8381101562000d0b57818101518382015260200162000cf1565b8381111562000d1b576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b612b918062000d476000396000f3fe60806040526004361061039b5760003560e01c80638456cb59116101dc578063c95d7dc611610102578063e6384d95116100a0578063f2fde38b1161006f578063f2fde38b146108c1578063fdb200e1146108e1578063ffbd3b1f14610901578063ffbe9f1e146105dd576103a2565b8063e6384d95146105dd578063e719847414610882578063e7a0367914610897578063e7e7e387146108ac576103a2565b8063d8b6d252116100dc578063d8b6d25214610816578063db4b7eee14610838578063dcfc0ced1461084d578063df8879b814610862576103a2565b8063c95d7dc6146107c1578063cfad57a2146107e1578063d389800f14610801576103a2565b8063976843171161017a578063b4896ecc11610149578063b4896ecc14610762578063b6b55f2514610777578063b74cd24214610797578063c914b437146107ac576103a2565b806397684317146107035780639e6b2ded14610718578063a43020441461072d578063ad269e2114610742576103a2565b80638da5cb5b116101b65780638da5cb5b146106af5780638fefda06146106c4578063933a9e63146106d957806393790113146106ee576103a2565b80638456cb591461067057806385f02dd614610685578063866b20181461069a576103a2565b8063430bf08a116102c1578063624e260f1161025f578063715018a61161022e578063715018a61461061c578063783478ad146106315780637b0a47ee146106465780637c3f1e8c1461065b576103a2565b8063624e260f146105c857806367057b6c146105dd57806368f54162146105f2578063693a090b14610607576103a2565b8063492816831161029b578063492816831461055c5780634f7405261461057c5780635713071c146105915780635c975abb146105a6576103a2565b8063430bf08a1461051d57806344a3955e1461053257806346008a0714610547576103a2565b80633220d7321161033957806340ce15b81161030857806340ce15b8146104c957806341275358146104de578063424ef45a146104f357806342da4eb314610508576103a2565b80633220d732146104685780633505b09f1461047d57806338946a8c146104945780633f4ba83a146104b4576103a2565b8063178a8d0711610375578063178a8d071461040957806320f6f76f1461041e57806325d8a530146104335780632e1a7d4d14610448576103a2565b806302d45457146103a75780630fa4e01e146103d257806314b5f8d1146103f4576103a2565b366103a257005b600080fd5b3480156103b357600080fd5b506103bc610916565b6040516103c991906123d7565b60405180910390f35b3480156103de57600080fd5b506103e761092e565b6040516103c991906129df565b34801561040057600080fd5b506103e7610934565b34801561041557600080fd5b506103e761095d565b34801561042a57600080fd5b506103e7610963565b34801561043f57600080fd5b506103bc610969565b34801561045457600080fd5b506103e76104633660046122bb565b610981565b34801561047457600080fd5b506103bc610c4f565b34801561048957600080fd5b50610492610c5e565b005b3480156104a057600080fd5b506103bc6104af3660046122bb565b610c92565b3480156104c057600080fd5b50610492610cbc565b3480156104d557600080fd5b506103e7610cee565b3480156104ea57600080fd5b506103bc610d6f565b3480156104ff57600080fd5b506103bc610d87565b34801561051457600080fd5b506103e7610d9f565b34801561052957600080fd5b506103bc610dcd565b34801561053e57600080fd5b506103e7610de5565b34801561055357600080fd5b506103bc610deb565b34801561056857600080fd5b506103bc6105773660046122bb565b610dfa565b34801561058857600080fd5b506103bc610e0a565b34801561059d57600080fd5b506103bc610e22565b3480156105b257600080fd5b506105bb610e3a565b6040516103c9919061255a565b3480156105d457600080fd5b506103e7610e43565b3480156105e957600080fd5b506103e7610e49565b3480156105fe57600080fd5b506103e7610e4f565b34801561061357600080fd5b506103bc610e55565b34801561062857600080fd5b50610492610e64565b34801561063d57600080fd5b506103bc610ead565b34801561065257600080fd5b506103e7610eb3565b34801561066757600080fd5b50610492610eb9565b34801561067c57600080fd5b50610492610eeb565b34801561069157600080fd5b506103e7610f1d565b3480156106a657600080fd5b506103e7610f23565b3480156106bb57600080fd5b506103bc610f29565b3480156106d057600080fd5b506103e7610f38565b3480156106e557600080fd5b506103bc610f3e565b3480156106fa57600080fd5b506103e7610f4d565b34801561070f57600080fd5b506103e7610f83565b34801561072457600080fd5b506103e7610f89565b34801561073957600080fd5b506103e7610f8f565b34801561074e57600080fd5b5061049261075d36600461230c565b610f9f565b34801561076e57600080fd5b506103e7611103565b34801561078357600080fd5b506103e76107923660046122bb565b611109565b3480156107a357600080fd5b506103e761121d565b3480156107b857600080fd5b506103e7611223565b3480156107cd57600080fd5b506103bc6107dc3660046122bb565b611229565b3480156107ed57600080fd5b506104926107fc3660046121c7565b611239565b34801561080d57600080fd5b50610492611285565b34801561082257600080fd5b5061082b611558565b6040516103c991906129d0565b34801561084457600080fd5b506103bc611569565b34801561085957600080fd5b506103bc611581565b34801561086e57600080fd5b5061049261087d3660046122eb565b611590565b34801561088e57600080fd5b506103bc61163c565b3480156108a357600080fd5b506103bc61164b565b3480156108b857600080fd5b506103e761165f565b3480156108cd57600080fd5b506104926108dc3660046121c7565b611691565b3480156108ed57600080fd5b506103bc6108fc3660046122bb565b611702565b34801561090d57600080fd5b506103e7611712565b73e6b8a5cf854791412c1f6efc7caf629f5df1c74781565b60095481565b600060145461271061094461165f565b61094e9190612ab2565b6109589190612a92565b905090565b600d5481565b60125481565b73d41ae58e803edf4304334acce4dc4ec34a63c64481565b600061098b61185d565b6001600160a01b031661099c610f29565b6001600160a01b0316146109cb5760405162461bcd60e51b81526004016109c2906127e9565b60405180910390fd5b600260015414156109ee5760405162461bcd60e51b81526004016109c29061293c565b600260015581610a105760405162461bcd60e51b81526004016109c290612855565b6002546040516370a0823160e01b815260009161010090046001600160a01b0316906370a0823190610a469030906004016123d7565b60206040518083038186803b158015610a5e57600080fd5b505afa158015610a72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9691906122d3565b905080831115610b2f57610aa8611861565b6002546040516370a0823160e01b81526101009091046001600160a01b0316906370a0823190610adc9030906004016123d7565b60206040518083038186803b158015610af457600080fd5b505afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c91906122d3565b90505b80831115610b3b578092505b610b43610d9f565b831115610b5557610b52610d9f565b92505b6000610b5f610d9f565b600a54610b6c9086612ab2565b610b769190612a92565b9050600a54811115610b875750600a545b80600a54610b959190612ad1565b600a55600e5460009061271090610bac9082612ad1565b610bb69087612ab2565b610bc09190612a92565b90508015610bf857600254610bf89061010090046001600160a01b031673d81bdf78b3bc96ee1838fe4ee820145f8101bbe9836118c0565b610c028186612ad1565b600754600254919650610c279161010090046001600160a01b039081169116876118c0565b610c2f610e3a565b610c4357610c43610c3e610f4d565b6118df565b50600180559392505050565b6007546001600160a01b031681565b6008546001600160a01b03163314610c885760405162461bcd60e51b81526004016109c2906126ba565b610c9061194c565b565b60198181548110610ca257600080fd5b6000918252602090912001546001600160a01b0316905081565b6008546001600160a01b03163314610ce65760405162461bcd60e51b81526004016109c2906126ba565b610c8861199d565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610d1f9030906004016123d7565b60206040518083038186803b158015610d3757600080fd5b505afa158015610d4b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095891906122d3565b732b8406c07613490cf56b978b8d531fd7eb06658281565b73fa3bd19110d986c5e5e9dd5f69362d05035d045b81565b6000610da961165f565b610db1610cee565b610db9610f4d565b610dc39190612a7a565b6109589190612ad1565b73d81bdf78b3bc96ee1838fe4ee820145f8101bbe981565b600a5481565b6008546001600160a01b031681565b60178181548110610ca257600080fd5b739198f13b08e299d85e096929fa9781a1e3d5d82781565b7363f7b7d85f9b02ad94c93a138a5b7508937b594281565b60025460ff1690565b60135481565b61271081565b600e5481565b6006546001600160a01b031681565b610e6c61185d565b6001600160a01b0316610e7d610f29565b6001600160a01b031614610ea35760405162461bcd60e51b81526004016109c2906127e9565b610c906000611a0b565b61dead81565b600c5481565b6008546001600160a01b03163314610ee35760405162461bcd60e51b81526004016109c2906126ba565b610c90611a5b565b6008546001600160a01b03163314610f155760405162461bcd60e51b81526004016109c2906126ba565b610c90611a9b565b600b5481565b6126ac81565b6000546001600160a01b031690565b6103e881565b6004546001600160a01b031681565b6002546040516370a0823160e01b815260009161010090046001600160a01b0316906370a0823190610d1f9030906004016123d7565b60115481565b60145481565b600060105461271061094461165f565b6008546001600160a01b03163314610fc95760405162461bcd60e51b81526004016109c2906126ba565b600d546103e890610fda888a612a7a565b610fe49190612a7a565b11156110025760405162461bcd60e51b81526004016109c29061281e565b6126ac8410156110245760405162461bcd60e51b81526004016109c290612606565b6127108411156110465760405162461bcd60e51b81526004016109c2906125cf565b6103e38311156110685760405162461bcd60e51b81526004016109c290612735565b600b879055600c869055600d859055600e849055600f839055600680546001600160a01b0319166001600160a01b0384161790556005805461ffff60a01b1916600160a01b61ffff8416021790556040517f2f2d8e57941eb99c211890b9cac03ae5e9ef1791310c0f697900f69071fb79f7906110f2908990899089908990899089908990612a3d565b60405180910390a150505050505050565b60155481565b600061111361185d565b6001600160a01b0316611124610f29565b6001600160a01b03161461114a5760405162461bcd60e51b81526004016109c2906127e9565b6002600154141561116d5760405162461bcd60e51b81526004016109c29061293c565b600260015561117a610e3a565b156111975760405162461bcd60e51b81526004016109c2906127b2565b60006111a1610d9f565b6002549091506111c19061010090046001600160a01b0316333086611af6565b60006111cc84611b1d565b90506000600a541180156111e05750600082115b156112015781600a54826111f49190612ab2565b6111fe9190612a92565b90505b80600a5461120f9190612a7a565b600a55600180559392505050565b6103e381565b60105481565b60168181548110610ca257600080fd5b6008546001600160a01b031633146112635760405162461bcd60e51b81526004016109c2906126ba565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b600260015414156112a85760405162461bcd60e51b81526004016109c29061293c565b60026001556112b5610e3a565b156112d25760405162461bcd60e51b81526004016109c2906127b2565b6008546001600160a01b031633146112fc5760405162461bcd60e51b81526004016109c2906126ba565b6005546040516370a0823160e01b81526000916001600160a01b0316906370a082319061132d9030906004016123d7565b60206040518083038186803b15801561134557600080fd5b505afa158015611359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137d91906122d3565b604051633111e7b360e01b815290915073d41ae58e803edf4304334acce4dc4ec34a63c64490633111e7b3906113be906016906000199030906004016124f1565b602060405180830381600087803b1580156113d857600080fd5b505af11580156113ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141091906122d3565b506005546040516370a0823160e01b815260009183916001600160a01b03909116906370a08231906114469030906004016123d7565b60206040518083038186803b15801561145e57600080fd5b505afa158015611472573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149691906122d3565b6114a09190612ad1565b90508015611550576114b181611b76565b90506114bc81611c3a565b60025460055491925061010090046001600160a01b039081169116146115415761154181601980548060200260200160405190810160405280929190818152602001828054801561153657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611518575b505050505030611cc7565b43600955611550610c3e610f4d565b505060018055565b600554600160a01b900461ffff1681565b739c3c9283d3e44854697cd22d3faa240cfb03288981565b6003546001600160a01b031681565b6008546001600160a01b031633146115ba5760405162461bcd60e51b81526004016109c2906126ba565b6013548211156115dc5760405162461bcd60e51b81526004016109c2906128d3565b816115f95760405162461bcd60e51b81526004016109c290612683565b60155481111561161b5760405162461bcd60e51b81526004016109c29061287c565b611623611861565b60108290556011819055611638610c3e610f4d565b5050565b6005546001600160a01b031681565b60025461010090046001600160a01b031681565b600480546040516370a0823160e01b81526000926001600160a01b03909216916370a0823191610d1f913091016123d7565b61169961185d565b6001600160a01b03166116aa610f29565b6001600160a01b0316146116d05760405162461bcd60e51b81526004016109c2906127e9565b6001600160a01b0381166116f65760405162461bcd60e51b81526004016109c29061263d565b6116ff81611a0b565b50565b60188181548110610ca257600080fd5b600f5481565b8015806117a05750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9061174e90309086906004016123eb565b60206040518083038186803b15801561176657600080fd5b505afa15801561177a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179e91906122d3565b155b6117bc5760405162461bcd60e51b81526004016109c290612973565b61183f8363095ea7b360e01b84846040516024016117db929190612429565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e0b565b505050565b60606118538484600085611e9a565b90505b9392505050565b3390565b600061186b610f4d565b601154909150156116ff575b61187f61165f565b8110156116ff5761188f81611f5a565b6118b161189a610934565b6118a2610cee565b6118ac9190612ad1565b611fdc565b6118b9610f4d565b9050611877565b61183f8363a9059cbb60e01b84846040516024016117db929190612429565b6011546118f4576118ef81612027565b6116ff565b6012548111156116ff5760005b6011548110156116385761191482612027565b612710601054836119259190612ab2565b61192f9190612a92565b915061193a82612086565b8061194481612b14565b915050611901565b60025461197e9061010090046001600160a01b0316739198f13b08e299d85e096929fa9781a1e3d5d827600019611718565b600654600554610c90916001600160a01b039182169116600019611718565b6119a5610e3a565b6119c15760405162461bcd60e51b81526004016109c290612598565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6119f461185d565b604051611a0191906123d7565b60405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611a63610f8f565b611a6b610cee565b11611a8057611a7b61189a610934565b611a8b565b611a8b61189a610f8f565b610c90611a96610f4d565b611f5a565b611aa3610e3a565b15611ac05760405162461bcd60e51b81526004016109c2906127b2565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119f461185d565b611b17846323b872dd60e01b8585856040516024016117db93929190612405565b50505050565b600080611b28610f4d565b905080611b39576000915050611b71565b600083611b44610d9f565b611b4e9190612ad1565b9050611b59826118df565b80611b62610d9f565b611b6c9190612ad1565b925050505b919050565b600b5460009015611c36576000612710600b5484611b949190612ab2565b611b9e9190612a92565b604051632e1a7d4d60e01b8152909150739c3c9283d3e44854697cd22d3faa240cfb03288990632e1a7d4d90611bd89084906004016129df565b600060405180830381600087803b158015611bf257600080fd5b505af1158015611c06573d6000803e3d6000fd5b50505050611c28732b8406c07613490cf56b978b8d531fd7eb066582826120e4565b611c328184612ad1565b9250505b5090565b600d5460009015611c36576000612710600d5484611c589190612ab2565b611c629190612a92565b9050611c28816018805480602002602001604051908101604052809291908181526020018280548015611cbe57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611ca0575b505050505061dead5b60065460405163d06ca61f60e01b81526000916001600160a01b03169063d06ca61f90611cfa90879087906004016129e8565b60006040518083038186803b158015611d1257600080fd5b505afa158015611d26573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611d4e91908101906121e1565b905060008160018351611d619190612ad1565b81518110611d7f57634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600654600f549192506001600160a01b031690635c11d795908790611daf9085612ab2565b8787426040518663ffffffff1660e01b8152600401611dd2959493929190612a01565b600060405180830381600087803b158015611dec57600080fd5b505af1158015611e00573d6000803e3d6000fd5b505050505050505050565b6000611e60826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118449092919063ffffffff16565b80519091501561183f5780806020019051810190611e7e919061229b565b61183f5760405162461bcd60e51b81526004016109c2906128f2565b606082471015611ebc5760405162461bcd60e51b81526004016109c29061276c565b611ec585612171565b611ee15760405162461bcd60e51b81526004016109c29061289c565b600080866001600160a01b03168587604051611efd91906123bb565b60006040518083038185875af1925050503d8060008114611f3a576040519150601f19603f3d011682016040523d82523d6000602084013e611f3f565b606091505b5091509150611f4f828286612177565b979650505050505050565b6002805460405163573ade8160e01b8152739198f13b08e299d85e096929fa9781a1e3d5d8279263573ade8192611fa7926101009091046001600160a01b03169186913090600401612492565b600060405180830381600087803b158015611fc157600080fd5b505af1158015611fd5573d6000803e3d6000fd5b5050505050565b600254604051631a4ca37b60e21b8152739198f13b08e299d85e096929fa9781a1e3d5d827916369328dec91611fa79161010090046001600160a01b03169085903090600401612442565b60025460055460405163e8eda9df60e01b8152739198f13b08e299d85e096929fa9781a1e3d5d8279263e8eda9df92611fa7926101009092046001600160a01b0316918691309161ffff600160a01b9092049190911690600401612465565b6002805460055460405163a415bcad60e01b8152739198f13b08e299d85e096929fa9781a1e3d5d8279363a415bcad93611fa7936101009091046001600160a01b03169287929161ffff600160a01b909104169030906004016124bd565b604080516000808252602082019092526001600160a01b03841690839060405161210e91906123bb565b60006040518083038185875af1925050503d806000811461214b576040519150601f19603f3d011682016040523d82523d6000602084013e612150565b606091505b505090508061183f5760405162461bcd60e51b81526004016109c2906126d8565b3b151590565b60608315612186575081611856565b8251156121965782518084602001fd5b8160405162461bcd60e51b81526004016109c29190612565565b80356001600160a01b0381168114611b7157600080fd5b6000602082840312156121d8578081fd5b611856826121b0565b600060208083850312156121f3578182fd5b825167ffffffffffffffff8082111561220a578384fd5b818501915085601f83011261221d578384fd5b81518181111561222f5761222f612b45565b8381026040518582820101818110858211171561224e5761224e612b45565b604052828152858101935084860182860187018a101561226c578788fd5b8795505b8386101561228e578051855260019590950194938601938601612270565b5098975050505050505050565b6000602082840312156122ac578081fd5b81518015158114611856578182fd5b6000602082840312156122cc578081fd5b5035919050565b6000602082840312156122e4578081fd5b5051919050565b600080604083850312156122fd578081fd5b50508035926020909101359150565b600080600080600080600060e0888a031215612326578283fd5b873596506020880135955060408801359450606088013593506080880135925061235260a089016121b0565b915060c088013561ffff81168114612368578182fd5b8091505092959891949750929550565b6000815180845260208085019450808401835b838110156123b05781516001600160a01b03168752958201959082019060010161238b565b509495945050505050565b600082516123cd818460208701612ae8565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b6001600160a01b0395861681526020810194909452604084019290925261ffff166060830152909116608082015260a00190565b6000606082016060835280865480835260808501915087845260209250828420845b828110156125385781546001600160a01b031684529284019260019182019101612513565b50505090830194909452506001600160a01b0391909116604090910152919050565b901515815260200190565b6000602082528251806020840152612584816040850160208701612ae8565b601f01601f19169190910160400192915050565b60208082526014908201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604082015260600190565b6020808252601b908201527f5f7769746864726177466565466163746f7220746f6f20686967680000000000604082015260600190565b6020808252601a908201527f5f7769746864726177466565466163746f7220746f6f206c6f77000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601f908201527f626f72726f7752617465206973207573656420617320612064697669736f7200604082015260600190565b60208082526004908201526310b3b7bb60e11b604082015260600190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526018908201527f5f736c697070616765466163746f7220746f6f20686967680000000000000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600f908201527f4d617820666565206f6620313030250000000000000000000000000000000000604082015260600190565b6020808252600d908201526c05f77616e74416d74206973203609c1b604082015260600190565b602080825260069082015265042c8cae0e8d60d31b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b602080825260059082015264217261746560d81b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606082015260800190565b61ffff91909116815260200190565b90815260200190565b6000838252604060208301526118536040830184612378565b600086825285602083015260a06040830152612a2060a0830186612378565b6001600160a01b0394909416606083015250608001529392505050565b96875260208701959095526040860193909352606085019190915260808401526001600160a01b031660a083015261ffff1660c082015260e00190565b60008219821115612a8d57612a8d612b2f565b500190565b600082612aad57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612acc57612acc612b2f565b500290565b600082821015612ae357612ae3612b2f565b500390565b60005b83811015612b03578181015183820152602001612aeb565b83811115611b175750506000910152565b6000600019821415612b2857612b28612b2f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a07d52f010a190be090246338c9a3d7d23cb6b11ed444e814b3d89f45ea9809764736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061039b5760003560e01c80638456cb59116101dc578063c95d7dc611610102578063e6384d95116100a0578063f2fde38b1161006f578063f2fde38b146108c1578063fdb200e1146108e1578063ffbd3b1f14610901578063ffbe9f1e146105dd576103a2565b8063e6384d95146105dd578063e719847414610882578063e7a0367914610897578063e7e7e387146108ac576103a2565b8063d8b6d252116100dc578063d8b6d25214610816578063db4b7eee14610838578063dcfc0ced1461084d578063df8879b814610862576103a2565b8063c95d7dc6146107c1578063cfad57a2146107e1578063d389800f14610801576103a2565b8063976843171161017a578063b4896ecc11610149578063b4896ecc14610762578063b6b55f2514610777578063b74cd24214610797578063c914b437146107ac576103a2565b806397684317146107035780639e6b2ded14610718578063a43020441461072d578063ad269e2114610742576103a2565b80638da5cb5b116101b65780638da5cb5b146106af5780638fefda06146106c4578063933a9e63146106d957806393790113146106ee576103a2565b80638456cb591461067057806385f02dd614610685578063866b20181461069a576103a2565b8063430bf08a116102c1578063624e260f1161025f578063715018a61161022e578063715018a61461061c578063783478ad146106315780637b0a47ee146106465780637c3f1e8c1461065b576103a2565b8063624e260f146105c857806367057b6c146105dd57806368f54162146105f2578063693a090b14610607576103a2565b8063492816831161029b578063492816831461055c5780634f7405261461057c5780635713071c146105915780635c975abb146105a6576103a2565b8063430bf08a1461051d57806344a3955e1461053257806346008a0714610547576103a2565b80633220d7321161033957806340ce15b81161030857806340ce15b8146104c957806341275358146104de578063424ef45a146104f357806342da4eb314610508576103a2565b80633220d732146104685780633505b09f1461047d57806338946a8c146104945780633f4ba83a146104b4576103a2565b8063178a8d0711610375578063178a8d071461040957806320f6f76f1461041e57806325d8a530146104335780632e1a7d4d14610448576103a2565b806302d45457146103a75780630fa4e01e146103d257806314b5f8d1146103f4576103a2565b366103a257005b600080fd5b3480156103b357600080fd5b506103bc610916565b6040516103c991906123d7565b60405180910390f35b3480156103de57600080fd5b506103e761092e565b6040516103c991906129df565b34801561040057600080fd5b506103e7610934565b34801561041557600080fd5b506103e761095d565b34801561042a57600080fd5b506103e7610963565b34801561043f57600080fd5b506103bc610969565b34801561045457600080fd5b506103e76104633660046122bb565b610981565b34801561047457600080fd5b506103bc610c4f565b34801561048957600080fd5b50610492610c5e565b005b3480156104a057600080fd5b506103bc6104af3660046122bb565b610c92565b3480156104c057600080fd5b50610492610cbc565b3480156104d557600080fd5b506103e7610cee565b3480156104ea57600080fd5b506103bc610d6f565b3480156104ff57600080fd5b506103bc610d87565b34801561051457600080fd5b506103e7610d9f565b34801561052957600080fd5b506103bc610dcd565b34801561053e57600080fd5b506103e7610de5565b34801561055357600080fd5b506103bc610deb565b34801561056857600080fd5b506103bc6105773660046122bb565b610dfa565b34801561058857600080fd5b506103bc610e0a565b34801561059d57600080fd5b506103bc610e22565b3480156105b257600080fd5b506105bb610e3a565b6040516103c9919061255a565b3480156105d457600080fd5b506103e7610e43565b3480156105e957600080fd5b506103e7610e49565b3480156105fe57600080fd5b506103e7610e4f565b34801561061357600080fd5b506103bc610e55565b34801561062857600080fd5b50610492610e64565b34801561063d57600080fd5b506103bc610ead565b34801561065257600080fd5b506103e7610eb3565b34801561066757600080fd5b50610492610eb9565b34801561067c57600080fd5b50610492610eeb565b34801561069157600080fd5b506103e7610f1d565b3480156106a657600080fd5b506103e7610f23565b3480156106bb57600080fd5b506103bc610f29565b3480156106d057600080fd5b506103e7610f38565b3480156106e557600080fd5b506103bc610f3e565b3480156106fa57600080fd5b506103e7610f4d565b34801561070f57600080fd5b506103e7610f83565b34801561072457600080fd5b506103e7610f89565b34801561073957600080fd5b506103e7610f8f565b34801561074e57600080fd5b5061049261075d36600461230c565b610f9f565b34801561076e57600080fd5b506103e7611103565b34801561078357600080fd5b506103e76107923660046122bb565b611109565b3480156107a357600080fd5b506103e761121d565b3480156107b857600080fd5b506103e7611223565b3480156107cd57600080fd5b506103bc6107dc3660046122bb565b611229565b3480156107ed57600080fd5b506104926107fc3660046121c7565b611239565b34801561080d57600080fd5b50610492611285565b34801561082257600080fd5b5061082b611558565b6040516103c991906129d0565b34801561084457600080fd5b506103bc611569565b34801561085957600080fd5b506103bc611581565b34801561086e57600080fd5b5061049261087d3660046122eb565b611590565b34801561088e57600080fd5b506103bc61163c565b3480156108a357600080fd5b506103bc61164b565b3480156108b857600080fd5b506103e761165f565b3480156108cd57600080fd5b506104926108dc3660046121c7565b611691565b3480156108ed57600080fd5b506103bc6108fc3660046122bb565b611702565b34801561090d57600080fd5b506103e7611712565b73e6b8a5cf854791412c1f6efc7caf629f5df1c74781565b60095481565b600060145461271061094461165f565b61094e9190612ab2565b6109589190612a92565b905090565b600d5481565b60125481565b73d41ae58e803edf4304334acce4dc4ec34a63c64481565b600061098b61185d565b6001600160a01b031661099c610f29565b6001600160a01b0316146109cb5760405162461bcd60e51b81526004016109c2906127e9565b60405180910390fd5b600260015414156109ee5760405162461bcd60e51b81526004016109c29061293c565b600260015581610a105760405162461bcd60e51b81526004016109c290612855565b6002546040516370a0823160e01b815260009161010090046001600160a01b0316906370a0823190610a469030906004016123d7565b60206040518083038186803b158015610a5e57600080fd5b505afa158015610a72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9691906122d3565b905080831115610b2f57610aa8611861565b6002546040516370a0823160e01b81526101009091046001600160a01b0316906370a0823190610adc9030906004016123d7565b60206040518083038186803b158015610af457600080fd5b505afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c91906122d3565b90505b80831115610b3b578092505b610b43610d9f565b831115610b5557610b52610d9f565b92505b6000610b5f610d9f565b600a54610b6c9086612ab2565b610b769190612a92565b9050600a54811115610b875750600a545b80600a54610b959190612ad1565b600a55600e5460009061271090610bac9082612ad1565b610bb69087612ab2565b610bc09190612a92565b90508015610bf857600254610bf89061010090046001600160a01b031673d81bdf78b3bc96ee1838fe4ee820145f8101bbe9836118c0565b610c028186612ad1565b600754600254919650610c279161010090046001600160a01b039081169116876118c0565b610c2f610e3a565b610c4357610c43610c3e610f4d565b6118df565b50600180559392505050565b6007546001600160a01b031681565b6008546001600160a01b03163314610c885760405162461bcd60e51b81526004016109c2906126ba565b610c9061194c565b565b60198181548110610ca257600080fd5b6000918252602090912001546001600160a01b0316905081565b6008546001600160a01b03163314610ce65760405162461bcd60e51b81526004016109c2906126ba565b610c8861199d565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610d1f9030906004016123d7565b60206040518083038186803b158015610d3757600080fd5b505afa158015610d4b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095891906122d3565b732b8406c07613490cf56b978b8d531fd7eb06658281565b73fa3bd19110d986c5e5e9dd5f69362d05035d045b81565b6000610da961165f565b610db1610cee565b610db9610f4d565b610dc39190612a7a565b6109589190612ad1565b73d81bdf78b3bc96ee1838fe4ee820145f8101bbe981565b600a5481565b6008546001600160a01b031681565b60178181548110610ca257600080fd5b739198f13b08e299d85e096929fa9781a1e3d5d82781565b7363f7b7d85f9b02ad94c93a138a5b7508937b594281565b60025460ff1690565b60135481565b61271081565b600e5481565b6006546001600160a01b031681565b610e6c61185d565b6001600160a01b0316610e7d610f29565b6001600160a01b031614610ea35760405162461bcd60e51b81526004016109c2906127e9565b610c906000611a0b565b61dead81565b600c5481565b6008546001600160a01b03163314610ee35760405162461bcd60e51b81526004016109c2906126ba565b610c90611a5b565b6008546001600160a01b03163314610f155760405162461bcd60e51b81526004016109c2906126ba565b610c90611a9b565b600b5481565b6126ac81565b6000546001600160a01b031690565b6103e881565b6004546001600160a01b031681565b6002546040516370a0823160e01b815260009161010090046001600160a01b0316906370a0823190610d1f9030906004016123d7565b60115481565b60145481565b600060105461271061094461165f565b6008546001600160a01b03163314610fc95760405162461bcd60e51b81526004016109c2906126ba565b600d546103e890610fda888a612a7a565b610fe49190612a7a565b11156110025760405162461bcd60e51b81526004016109c29061281e565b6126ac8410156110245760405162461bcd60e51b81526004016109c290612606565b6127108411156110465760405162461bcd60e51b81526004016109c2906125cf565b6103e38311156110685760405162461bcd60e51b81526004016109c290612735565b600b879055600c869055600d859055600e849055600f839055600680546001600160a01b0319166001600160a01b0384161790556005805461ffff60a01b1916600160a01b61ffff8416021790556040517f2f2d8e57941eb99c211890b9cac03ae5e9ef1791310c0f697900f69071fb79f7906110f2908990899089908990899089908990612a3d565b60405180910390a150505050505050565b60155481565b600061111361185d565b6001600160a01b0316611124610f29565b6001600160a01b03161461114a5760405162461bcd60e51b81526004016109c2906127e9565b6002600154141561116d5760405162461bcd60e51b81526004016109c29061293c565b600260015561117a610e3a565b156111975760405162461bcd60e51b81526004016109c2906127b2565b60006111a1610d9f565b6002549091506111c19061010090046001600160a01b0316333086611af6565b60006111cc84611b1d565b90506000600a541180156111e05750600082115b156112015781600a54826111f49190612ab2565b6111fe9190612a92565b90505b80600a5461120f9190612a7a565b600a55600180559392505050565b6103e381565b60105481565b60168181548110610ca257600080fd5b6008546001600160a01b031633146112635760405162461bcd60e51b81526004016109c2906126ba565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b600260015414156112a85760405162461bcd60e51b81526004016109c29061293c565b60026001556112b5610e3a565b156112d25760405162461bcd60e51b81526004016109c2906127b2565b6008546001600160a01b031633146112fc5760405162461bcd60e51b81526004016109c2906126ba565b6005546040516370a0823160e01b81526000916001600160a01b0316906370a082319061132d9030906004016123d7565b60206040518083038186803b15801561134557600080fd5b505afa158015611359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137d91906122d3565b604051633111e7b360e01b815290915073d41ae58e803edf4304334acce4dc4ec34a63c64490633111e7b3906113be906016906000199030906004016124f1565b602060405180830381600087803b1580156113d857600080fd5b505af11580156113ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141091906122d3565b506005546040516370a0823160e01b815260009183916001600160a01b03909116906370a08231906114469030906004016123d7565b60206040518083038186803b15801561145e57600080fd5b505afa158015611472573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149691906122d3565b6114a09190612ad1565b90508015611550576114b181611b76565b90506114bc81611c3a565b60025460055491925061010090046001600160a01b039081169116146115415761154181601980548060200260200160405190810160405280929190818152602001828054801561153657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611518575b505050505030611cc7565b43600955611550610c3e610f4d565b505060018055565b600554600160a01b900461ffff1681565b739c3c9283d3e44854697cd22d3faa240cfb03288981565b6003546001600160a01b031681565b6008546001600160a01b031633146115ba5760405162461bcd60e51b81526004016109c2906126ba565b6013548211156115dc5760405162461bcd60e51b81526004016109c2906128d3565b816115f95760405162461bcd60e51b81526004016109c290612683565b60155481111561161b5760405162461bcd60e51b81526004016109c29061287c565b611623611861565b60108290556011819055611638610c3e610f4d565b5050565b6005546001600160a01b031681565b60025461010090046001600160a01b031681565b600480546040516370a0823160e01b81526000926001600160a01b03909216916370a0823191610d1f913091016123d7565b61169961185d565b6001600160a01b03166116aa610f29565b6001600160a01b0316146116d05760405162461bcd60e51b81526004016109c2906127e9565b6001600160a01b0381166116f65760405162461bcd60e51b81526004016109c29061263d565b6116ff81611a0b565b50565b60188181548110610ca257600080fd5b600f5481565b8015806117a05750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9061174e90309086906004016123eb565b60206040518083038186803b15801561176657600080fd5b505afa15801561177a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179e91906122d3565b155b6117bc5760405162461bcd60e51b81526004016109c290612973565b61183f8363095ea7b360e01b84846040516024016117db929190612429565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e0b565b505050565b60606118538484600085611e9a565b90505b9392505050565b3390565b600061186b610f4d565b601154909150156116ff575b61187f61165f565b8110156116ff5761188f81611f5a565b6118b161189a610934565b6118a2610cee565b6118ac9190612ad1565b611fdc565b6118b9610f4d565b9050611877565b61183f8363a9059cbb60e01b84846040516024016117db929190612429565b6011546118f4576118ef81612027565b6116ff565b6012548111156116ff5760005b6011548110156116385761191482612027565b612710601054836119259190612ab2565b61192f9190612a92565b915061193a82612086565b8061194481612b14565b915050611901565b60025461197e9061010090046001600160a01b0316739198f13b08e299d85e096929fa9781a1e3d5d827600019611718565b600654600554610c90916001600160a01b039182169116600019611718565b6119a5610e3a565b6119c15760405162461bcd60e51b81526004016109c290612598565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6119f461185d565b604051611a0191906123d7565b60405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611a63610f8f565b611a6b610cee565b11611a8057611a7b61189a610934565b611a8b565b611a8b61189a610f8f565b610c90611a96610f4d565b611f5a565b611aa3610e3a565b15611ac05760405162461bcd60e51b81526004016109c2906127b2565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119f461185d565b611b17846323b872dd60e01b8585856040516024016117db93929190612405565b50505050565b600080611b28610f4d565b905080611b39576000915050611b71565b600083611b44610d9f565b611b4e9190612ad1565b9050611b59826118df565b80611b62610d9f565b611b6c9190612ad1565b925050505b919050565b600b5460009015611c36576000612710600b5484611b949190612ab2565b611b9e9190612a92565b604051632e1a7d4d60e01b8152909150739c3c9283d3e44854697cd22d3faa240cfb03288990632e1a7d4d90611bd89084906004016129df565b600060405180830381600087803b158015611bf257600080fd5b505af1158015611c06573d6000803e3d6000fd5b50505050611c28732b8406c07613490cf56b978b8d531fd7eb066582826120e4565b611c328184612ad1565b9250505b5090565b600d5460009015611c36576000612710600d5484611c589190612ab2565b611c629190612a92565b9050611c28816018805480602002602001604051908101604052809291908181526020018280548015611cbe57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611ca0575b505050505061dead5b60065460405163d06ca61f60e01b81526000916001600160a01b03169063d06ca61f90611cfa90879087906004016129e8565b60006040518083038186803b158015611d1257600080fd5b505afa158015611d26573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611d4e91908101906121e1565b905060008160018351611d619190612ad1565b81518110611d7f57634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600654600f549192506001600160a01b031690635c11d795908790611daf9085612ab2565b8787426040518663ffffffff1660e01b8152600401611dd2959493929190612a01565b600060405180830381600087803b158015611dec57600080fd5b505af1158015611e00573d6000803e3d6000fd5b505050505050505050565b6000611e60826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118449092919063ffffffff16565b80519091501561183f5780806020019051810190611e7e919061229b565b61183f5760405162461bcd60e51b81526004016109c2906128f2565b606082471015611ebc5760405162461bcd60e51b81526004016109c29061276c565b611ec585612171565b611ee15760405162461bcd60e51b81526004016109c29061289c565b600080866001600160a01b03168587604051611efd91906123bb565b60006040518083038185875af1925050503d8060008114611f3a576040519150601f19603f3d011682016040523d82523d6000602084013e611f3f565b606091505b5091509150611f4f828286612177565b979650505050505050565b6002805460405163573ade8160e01b8152739198f13b08e299d85e096929fa9781a1e3d5d8279263573ade8192611fa7926101009091046001600160a01b03169186913090600401612492565b600060405180830381600087803b158015611fc157600080fd5b505af1158015611fd5573d6000803e3d6000fd5b5050505050565b600254604051631a4ca37b60e21b8152739198f13b08e299d85e096929fa9781a1e3d5d827916369328dec91611fa79161010090046001600160a01b03169085903090600401612442565b60025460055460405163e8eda9df60e01b8152739198f13b08e299d85e096929fa9781a1e3d5d8279263e8eda9df92611fa7926101009092046001600160a01b0316918691309161ffff600160a01b9092049190911690600401612465565b6002805460055460405163a415bcad60e01b8152739198f13b08e299d85e096929fa9781a1e3d5d8279363a415bcad93611fa7936101009091046001600160a01b03169287929161ffff600160a01b909104169030906004016124bd565b604080516000808252602082019092526001600160a01b03841690839060405161210e91906123bb565b60006040518083038185875af1925050503d806000811461214b576040519150601f19603f3d011682016040523d82523d6000602084013e612150565b606091505b505090508061183f5760405162461bcd60e51b81526004016109c2906126d8565b3b151590565b60608315612186575081611856565b8251156121965782518084602001fd5b8160405162461bcd60e51b81526004016109c29190612565565b80356001600160a01b0381168114611b7157600080fd5b6000602082840312156121d8578081fd5b611856826121b0565b600060208083850312156121f3578182fd5b825167ffffffffffffffff8082111561220a578384fd5b818501915085601f83011261221d578384fd5b81518181111561222f5761222f612b45565b8381026040518582820101818110858211171561224e5761224e612b45565b604052828152858101935084860182860187018a101561226c578788fd5b8795505b8386101561228e578051855260019590950194938601938601612270565b5098975050505050505050565b6000602082840312156122ac578081fd5b81518015158114611856578182fd5b6000602082840312156122cc578081fd5b5035919050565b6000602082840312156122e4578081fd5b5051919050565b600080604083850312156122fd578081fd5b50508035926020909101359150565b600080600080600080600060e0888a031215612326578283fd5b873596506020880135955060408801359450606088013593506080880135925061235260a089016121b0565b915060c088013561ffff81168114612368578182fd5b8091505092959891949750929550565b6000815180845260208085019450808401835b838110156123b05781516001600160a01b03168752958201959082019060010161238b565b509495945050505050565b600082516123cd818460208701612ae8565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b6001600160a01b0395861681526020810194909452604084019290925261ffff166060830152909116608082015260a00190565b6000606082016060835280865480835260808501915087845260209250828420845b828110156125385781546001600160a01b031684529284019260019182019101612513565b50505090830194909452506001600160a01b0391909116604090910152919050565b901515815260200190565b6000602082528251806020840152612584816040850160208701612ae8565b601f01601f19169190910160400192915050565b60208082526014908201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604082015260600190565b6020808252601b908201527f5f7769746864726177466565466163746f7220746f6f20686967680000000000604082015260600190565b6020808252601a908201527f5f7769746864726177466565466163746f7220746f6f206c6f77000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601f908201527f626f72726f7752617465206973207573656420617320612064697669736f7200604082015260600190565b60208082526004908201526310b3b7bb60e11b604082015260600190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526018908201527f5f736c697070616765466163746f7220746f6f20686967680000000000000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600f908201527f4d617820666565206f6620313030250000000000000000000000000000000000604082015260600190565b6020808252600d908201526c05f77616e74416d74206973203609c1b604082015260600190565b602080825260069082015265042c8cae0e8d60d31b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b602080825260059082015264217261746560d81b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606082015260800190565b61ffff91909116815260200190565b90815260200190565b6000838252604060208301526118536040830184612378565b600086825285602083015260a06040830152612a2060a0830186612378565b6001600160a01b0394909416606083015250608001529392505050565b96875260208701959095526040860193909352606085019190915260808401526001600160a01b031660a083015261ffff1660c082015260e00190565b60008219821115612a8d57612a8d612b2f565b500190565b600082612aad57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612acc57612acc612b2f565b500290565b600082821015612ae357612ae3612b2f565b500390565b60005b83811015612b03578181015183820152602001612aeb565b83811115611b175750506000910152565b6000600019821415612b2857612b28612b2f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a07d52f010a190be090246338c9a3d7d23cb6b11ed444e814b3d89f45ea9809764736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "borrowRate": {
        "details": "Variables that can be changed to config profitability and risk: {borrowRate}          - At What % of our collateral do we borrow per leverage level. {borrowDepth}         - How many levels of leverage do we take. {BORROW_RATE_MAX}     - A limit on how much we can push borrow risk. {BORROW_DEPTH_MAX}    - A limit on how many steps we can leverage."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 207,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 122,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "_paused",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 3672,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "wantAddress",
        "offset": 1,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 3674,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "aTokenAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 3676,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "debtTokenAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 3678,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "earnedAddress",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 3681,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "referralCode",
        "offset": 20,
        "slot": "5",
        "type": "t_uint16"
      },
      {
        "astId": 3684,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "uniRouterAddress",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 3701,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "vaultChefAddress",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 3703,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "govAddress",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 3707,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "lastEarnBlock",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 3710,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "sharesTotal",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 3716,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "controllerFee",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 3719,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "rewardRate",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 3722,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "buyBackRate",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 3731,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "withdrawFeeFactor",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 3740,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "slippageFactor",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 3746,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "borrowRate",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 3749,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "borrowDepth",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 3751,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "minLeverage",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 3753,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "BORROW_RATE_MAX",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 3755,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "BORROW_RATE_MAX_HARD",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 3758,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "BORROW_DEPTH_MAX",
        "offset": 0,
        "slot": "21",
        "type": "t_uint256"
      },
      {
        "astId": 3764,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "aTokenArray",
        "offset": 0,
        "slot": "22",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 3767,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "earnedToUsdcPath",
        "offset": 0,
        "slot": "23",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 3770,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "earnedToBbankPath",
        "offset": 0,
        "slot": "24",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 3773,
        "contract": "contracts/vault/StrategyAave.sol:StrategyAave",
        "label": "earnedToWantPath",
        "offset": 0,
        "slot": "25",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}